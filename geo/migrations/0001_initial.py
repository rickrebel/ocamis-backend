# Generated by Django 4.1.13 on 2024-07-16 07:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import geo.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CLUES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='NOMBRE DE LA UNIDAD')),
                ('key_issste', models.CharField(blank=True, max_length=12, null=True, verbose_name='Clave única de ISSSTE')),
                ('is_searchable', models.BooleanField(default=False, help_text='Puede buscarse por el usuario', verbose_name='Activo')),
                ('municipality_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='NOMBRE DEL MUNICIPIO')),
                ('municipality_inegi_code', models.CharField(blank=True, max_length=5, null=True)),
                ('typology', models.CharField(max_length=255, verbose_name='NOMBRE DE TIPOLOGIA')),
                ('typology_cve', models.CharField(max_length=18, verbose_name='CLAVE DE TIPOLOGÍA')),
                ('id_clues', models.CharField(max_length=10, verbose_name='ID_CLUES')),
                ('clues', models.CharField(max_length=20, verbose_name='CLUES')),
                ('status_operation', models.CharField(max_length=80, verbose_name='ESTATUS DE OPERACIÓN')),
                ('longitude', models.CharField(max_length=20, verbose_name='LONGITUD')),
                ('latitude', models.CharField(max_length=20, verbose_name='LATITUD')),
                ('locality', models.CharField(max_length=80, verbose_name='NOMBRE DE LA LOCALIDAD')),
                ('locality_inegi_code', models.CharField(max_length=5, verbose_name='CLAVE DE LA LOCALIDAD')),
                ('jurisdiction', models.CharField(max_length=80, verbose_name='NOMBRE DE LA JURISDICCIÓN')),
                ('jurisdiction_clave', models.CharField(max_length=5, verbose_name='CLAVE DE LA JURISDICCIÓN')),
                ('establishment_type', models.CharField(max_length=80, verbose_name='NOMBRE TIPO ESTABLECIMIENTO')),
                ('consultings_general', models.IntegerField(verbose_name='CONSULTORIOS DE MED GRAL')),
                ('consultings_other', models.IntegerField(verbose_name='CONSULTORIOS EN OTRAS AREAS')),
                ('beds_hopital', models.IntegerField(verbose_name='CAMAS EN AREA DE HOS')),
                ('beds_other', models.IntegerField(verbose_name='CAMAS EN OTRAS AREAS')),
                ('total_unities', models.IntegerField(verbose_name='suma de unidades')),
                ('admin_institution', models.CharField(max_length=80, verbose_name='NOMBRE DE LA INS ADM')),
                ('atention_level', models.CharField(max_length=80, verbose_name='NIVEL ATENCIÓN')),
                ('stratum', models.CharField(max_length=80, verbose_name='ESTRATO UNIDAD')),
                ('real_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre Limpiado')),
                ('alter_clasifs', models.CharField(blank=True, max_length=255, null=True, verbose_name='clasificaciones alternativas')),
                ('clasif_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Nombre completo tipo')),
                ('prev_clasif_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Nombre corto tipo')),
                ('number_unity', models.CharField(blank=True, max_length=6, null=True, verbose_name='Número de unidad')),
                ('is_national', models.BooleanField(default=False)),
                ('name_in_issten', models.CharField(blank=True, max_length=255, null=True, verbose_name='NOMBRE DE LA UNIDAD')),
                ('rr_data', models.TextField(blank=True, null=True)),
                ('alternative_names', models.JSONField(blank=True, null=True)),
                ('type_street', models.CharField(blank=True, max_length=80, null=True, verbose_name='TIPO DE VIALIDAD')),
                ('street', models.CharField(blank=True, max_length=255, null=True, verbose_name='VIALIDAD')),
                ('streat_number', models.CharField(blank=True, max_length=80, null=True, verbose_name='NÚMERO CALLE')),
                ('suburb', models.CharField(blank=True, max_length=255, null=True, verbose_name='SUBURBIO')),
                ('postal_code', models.CharField(blank=True, max_length=6, null=True, verbose_name='CODIGO POSTAL')),
                ('rfc', models.CharField(blank=True, max_length=15, null=True, verbose_name='RFC')),
                ('last_change', models.DateTimeField(blank=True, null=True, verbose_name='FECHA ULTIMO MOVIMIENTO')),
            ],
            options={
                'verbose_name': 'Hospital o clínica CLUES',
                'verbose_name_plural': 'Catálogo CLUES',
                'db_table': 'geo_clues',
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='NOMBRE DE LA INSTITUCION')),
                ('code', models.CharField(max_length=20, verbose_name='CLAVE DE LA INSTITUCION')),
                ('public_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='NOMBRE PUBLICO DE LA INSTITUCION')),
                ('public_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='CLAVE PUBLICA DE LA INSTITUCION')),
                ('relevance', models.IntegerField(default=2, verbose_name='Relevancia (Para filtros)')),
            ],
            options={
                'verbose_name': 'Institución',
                'verbose_name_plural': 'Instituciones',
                'db_table': 'geo_institution',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inegi_code', models.CharField(max_length=2, verbose_name='Clave INEGI')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('short_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Nombre Corto')),
                ('code_name', models.CharField(blank=True, max_length=6, null=True, verbose_name='Nombre Clave')),
                ('other_names', models.CharField(blank=True, help_text='No utilizar para OCAMIS, es solo para para cero desabasto', max_length=255, null=True, verbose_name='Otros nombres')),
                ('alternative_names', models.JSONField(default=geo.models.default_alternative_names, help_text='Ocupar para OCAMIS', verbose_name='Lista nombres alternativos')),
            ],
            options={
                'verbose_name': 'Entidad Federativa',
                'verbose_name_plural': 'Entidades Federativas',
                'db_table': 'geo_state',
                'ordering': ['inegi_code'],
            },
        ),
        migrations.CreateModel(
            name='Typology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave', models.CharField(max_length=50, verbose_name='Clave oficial')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre oficial')),
                ('public_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre corto (modificado)')),
                ('alternative_names', models.JSONField(blank=True, null=True)),
                ('is_aggregate', models.BooleanField(blank=True, default=False, null=True)),
                ('aggregate_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.typology')),
            ],
            options={
                'verbose_name': 'Tipología',
                'verbose_name_plural': 'Tipologías',
                'db_table': 'geo_typology',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre de la entidad')),
                ('acronym', models.CharField(max_length=20, verbose_name='Clave de la entidad')),
                ('short_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre corto')),
                ('population', models.IntegerField(default=0, verbose_name='Población')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('is_clues', models.BooleanField(default=False, verbose_name='Es solo un CLUES')),
                ('split_by_delegation', models.BooleanField(default=False, verbose_name='Dividir por delegación')),
                ('is_indirect', models.BooleanField(default=False, verbose_name='Es indirecto (entidad Real)')),
                ('has_indirect', models.BooleanField(default=False, verbose_name='Tiene indirectos')),
                ('variables', models.JSONField(blank=True, null=True)),
                ('strategy', models.TextField(blank=True, null=True, verbose_name='Estrategia para solicitudes')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Asignado a')),
                ('institution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='providers', to='geo.institution', verbose_name='Institución')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='providers', to='geo.state', verbose_name='Estado')),
                ('status_priority', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.statuscontrol', verbose_name='Status de los registro de variables')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'db_table': 'geo_entity',
                'ordering': ['state__name'],
            },
        ),
        migrations.CreateModel(
            name='Municipality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inegi_code', models.CharField(max_length=6, verbose_name='Clave INEGI')),
                ('name', models.CharField(max_length=120, verbose_name='Nombre')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='municipalities', to='geo.state', verbose_name=geo.models.State)),
            ],
            options={
                'verbose_name': 'Municipio',
                'verbose_name_plural': 'Municipios',
                'db_table': 'geo_municipality',
            },
        ),
        migrations.CreateModel(
            name='Jurisdiction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('key', models.CharField(max_length=50, verbose_name='Clave')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.institution', verbose_name='Institución')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.state', verbose_name='Entidad')),
            ],
            options={
                'verbose_name': 'Jurisdicción',
                'verbose_name_plural': 'Jurisdicciones',
                'db_table': 'geo_jurisdiction',
            },
        ),
        migrations.CreateModel(
            name='Delegation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('jurisdiction_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='Clave de la Jurisdicción')),
                ('is_clues', models.BooleanField(default=False)),
                ('other_names', models.JSONField(blank=True, null=True)),
                ('is_jurisdiction', models.BooleanField(default=False)),
                ('clues', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='related_delegation', to='geo.clues')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.institution', verbose_name='Institución')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delegations', to='geo.provider', verbose_name='Entidad')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.state', verbose_name='Entidad')),
            ],
            options={
                'verbose_name': 'Delegación',
                'verbose_name_plural': 'Delegaciones',
                'db_table': 'geo_delegation',
            },
        ),
        migrations.AddField(
            model_name='clues',
            name='delegation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='all_clues', to='geo.delegation'),
        ),
        migrations.AddField(
            model_name='clues',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.institution'),
        ),
        migrations.AddField(
            model_name='clues',
            name='municipality',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.municipality'),
        ),
        migrations.AddField(
            model_name='clues',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ent_clues', to='geo.provider'),
        ),
        migrations.AddField(
            model_name='clues',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.state'),
        ),
        migrations.AddField(
            model_name='clues',
            name='typology_obj',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.typology', verbose_name='Tipología (Catálogo)'),
        ),
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Solo cuando sea distinta al nombre de la institución/CLUES', max_length=120, null=True, verbose_name='Nombre')),
                ('acronym', models.CharField(blank=True, max_length=20, null=True, verbose_name='Siglas del Sujeto Obligado')),
                ('idSujetoObligado', models.IntegerField(blank=True, help_text='idSujetoObligado del INAI', null=True, verbose_name='idSujetoObligado')),
                ('nameForInai', models.CharField(blank=True, max_length=255, null=True, verbose_name='nombre según INAI')),
                ('nombreSujetoObligado', models.CharField(blank=True, help_text='nombreSujetoObligado del INAI', max_length=160, null=True, verbose_name='nombreSujetoObligado')),
                ('addl_params', models.JSONField(blank=True, null=True)),
                ('vigencia', models.BooleanField(default=True, help_text='Actualmente se le sigue preguntando')),
                ('competent', models.BooleanField(default=True, help_text='Es Competente porque tiene pacientes y debe tener la información', verbose_name='Competente')),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_pilot', models.BooleanField(default=False)),
                ('population', models.IntegerField(blank=True, null=True, verbose_name='Derechohabientes')),
                ('clues', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.clues')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.institution')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='agencies', to='geo.provider', verbose_name='Entidad')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.state')),
            ],
            options={
                'verbose_name': 'Sujeto Obligado (Agency)',
                'verbose_name_plural': 'Sujetos Obligados (Agencies)',
                'db_table': 'geo_agency',
                'ordering': ['state__name'],
            },
        ),
    ]
