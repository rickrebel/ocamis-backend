# Generated by Django 4.1.13 on 2024-07-16 07:59

import category.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ColumnType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('public_name', models.CharField(blank=True, max_length=120, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField(default=5)),
            ],
            options={
                'verbose_name': 'Tipo de Columna',
                'verbose_name_plural': 'Tipos de columnas',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='DateBreak',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('group', models.CharField(choices=[('petition', 'de Solicitud'), ('data', 'Datos entregados'), ('complain', 'Quejas - Revisiones'), ('register', 'Registro de variables'), ('provider', 'para Proveedores'), ('priority', 'Prioridad en Solicitudes')], default='petition', max_length=10, verbose_name='grupo')),
                ('public_name', models.CharField(max_length=120)),
                ('order', models.IntegerField(default=5)),
                ('break_params', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Fecha de corte',
                'verbose_name_plural': 'Fechas de corte',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FileFormat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=20)),
                ('public_name', models.CharField(max_length=80)),
                ('suffixes', models.JSONField(blank=True, default=category.models.default_list, null=True, verbose_name='extensiones')),
                ('readable', models.BooleanField(verbose_name='es legible por máquinas')),
                ('addl_params', models.JSONField(blank=True, default=category.models.default_dict)),
                ('order', models.IntegerField(blank=True, default=10)),
            ],
            options={
                'verbose_name': 'Formato de archivos',
                'verbose_name_plural': 'Formatos de archivos',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('public_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('has_data', models.BooleanField(default=False)),
                ('is_original', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=15)),
                ('color', models.CharField(blank=True, max_length=20, null=True)),
                ('group', models.CharField(choices=[('petition', 'de Solicitud'), ('data', 'Datos entregados'), ('complain', 'Quejas - Revisiones'), ('register', 'Registro de variables'), ('provider', 'para Proveedores'), ('priority', 'Prioridad en Solicitudes')], default='petition', max_length=10, verbose_name='grupo')),
                ('addl_params', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de archivo',
                'verbose_name_plural': 'Tipos de archivos',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='InvalidReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('order', models.IntegerField(default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_official', models.BooleanField(default=False, verbose_name='es oficial')),
            ],
            options={
                'verbose_name': 'Razón de invalidez de datos',
                'verbose_name_plural': 'Razones de invalidez de datos',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='NegativeReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('order', models.IntegerField(default=1)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Razón de negación de datos',
                'verbose_name_plural': 'Razones de negación de datos',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OldStatusControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(choices=[('petition', 'de Solicitud'), ('data', 'Datos entregados'), ('complain', 'Quejas - Revisiones'), ('register', 'Registro de variables'), ('provider', 'para Proveedores'), ('priority', 'Prioridad en Solicitudes')], default='petition', max_length=10, verbose_name='grupo de status')),
                ('name', models.CharField(max_length=120)),
                ('public_name', models.CharField(max_length=255)),
                ('color', models.CharField(blank=True, help_text='https://vuetifyjs.com/en/styles/colors/', max_length=30, null=True)),
                ('icon', models.CharField(blank=True, max_length=40, null=True)),
                ('order', models.IntegerField(default=4)),
                ('description', models.TextField(blank=True, null=True)),
                ('addl_params', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Status de control',
                'verbose_name_plural': 'Status de control (TODOS)',
                'db_table': 'category_oldstatuscontrol',
                'ordering': ['group', 'order'],
            },
        ),
        migrations.CreateModel(
            name='StatusControl',
            fields=[
                ('name', models.CharField(max_length=120, primary_key=True, serialize=False)),
                ('group', models.CharField(choices=[('petition', 'de Solicitud'), ('data', 'Datos entregados'), ('complain', 'Quejas - Revisiones'), ('register', 'Registro de variables'), ('provider', 'para Proveedores'), ('priority', 'Prioridad en Solicitudes')], max_length=10, verbose_name='grupo de status')),
                ('public_name', models.CharField(max_length=255)),
                ('official_name', models.CharField(blank=True, max_length=255, null=True)),
                ('color', models.CharField(blank=True, help_text='https://vuetifyjs.com/en/styles/colors/', max_length=30, null=True)),
                ('icon', models.CharField(blank=True, max_length=40, null=True)),
                ('order', models.IntegerField(default=4)),
                ('description', models.TextField(blank=True, null=True)),
                ('addl_params', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '1. Status de control',
                'verbose_name_plural': '1. Status de control',
                'ordering': ['group', 'order'],
            },
        ),
    ]
