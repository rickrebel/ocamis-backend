# Generated by Django 2.2.25 on 2022-07-20 00:27

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import files_rows.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0008_auto_20220719_1927'),
        ('parameter', '0002_auto_20220719_1927'),
        ('recipe', '0003_auto_20220706_1108'),
        ('files_categories', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_in_data', models.TextField(blank=True, null=True)),
                ('position_in_data', models.IntegerField(default=1)),
                ('clean_params', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('requiered_row', models.BooleanField(default=False)),
                ('children_row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrens', to='files_rows.Column', verbose_name='Hijo resultado (junto a otras columnas)')),
                ('column_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_categories.ColumnType')),
                ('final_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parameter.FinalField')),
            ],
            options={
                'verbose_name': 'Columna',
                'verbose_name_plural': 'Columnas',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ori_file', models.FileField(upload_to='')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_final', models.BooleanField(default=True)),
                ('error_process', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('inserted_rows', models.IntegerField(default=1)),
                ('completed_rows', models.IntegerField(default=1)),
                ('total_rows', models.IntegerField(default=1)),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
            },
        ),
        migrations.CreateModel(
            name='GroupFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='grupo único', max_length=120)),
                ('final_data', models.NullBooleanField(verbose_name='Es información final')),
                ('notes', models.TextField(blank=True, null=True)),
                ('row_start_data', models.IntegerField(default=1, verbose_name='# de fila donde inician los datos')),
                ('row_headers', models.IntegerField(blank=True, null=True, verbose_name='# de fila donde se encuentran los encabezados')),
                ('in_percent', models.BooleanField(default=False)),
                ('addl_params', django.contrib.postgres.fields.jsonb.JSONField(default=files_rows.models.GroupFile.default_addl_params)),
                ('delimiter', models.CharField(blank=True, max_length=3, null=True, verbose_name='Delimitador de columnas')),
                ('format_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_categories.FormatFile')),
                ('type_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_categories.TypeFile')),
            ],
            options={
                'verbose_name': 'Grupo de archivos',
                'verbose_name_plural': 'Grupos de archivos',
            },
        ),
        migrations.CreateModel(
            name='MonthEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_month', models.CharField(max_length=10)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Entity')),
            ],
            options={
                'verbose_name': 'Mes de entidad',
                'verbose_name_plural': 'Meses de entidad',
            },
        ),
        migrations.CreateModel(
            name='Petition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_send', models.DateTimeField(blank=True, null=True)),
                ('date_response', models.DateTimeField(blank=True, null=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.Entity')),
            ],
            options={
                'verbose_name': 'Solicitud',
                'verbose_name_plural': 'Solicitudes',
            },
        ),
        migrations.CreateModel(
            name='PetitionMonth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('monthentity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.MonthEntity')),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.Petition')),
            ],
            options={
                'verbose_name': 'Mes de peticion',
                'verbose_name_plural': 'Meses de peticion',
            },
        ),
        migrations.CreateModel(
            name='PetitionGroupFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.GroupFile')),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.Petition')),
            ],
            options={
                'verbose_name': 'Relacional: petición -- group_file',
                'verbose_name_plural': 'Relacional: petición -- group_file',
            },
        ),
        migrations.CreateModel(
            name='MissingRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('row_seq', models.IntegerField(default=1)),
                ('errors', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.File')),
                ('recipe_medicine', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='recipe.RecipeMedicine2')),
                ('recipe_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='recipe.RecipeReport2')),
            ],
            options={
                'verbose_name': 'Renglón faltante',
                'verbose_name_plural': 'Renglones faltantes',
            },
        ),
        migrations.CreateModel(
            name='MissingField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_value', models.TextField(blank=True, null=True)),
                ('final_value', models.TextField(blank=True, null=True)),
                ('other_values', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('errors', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.Column')),
                ('missing_row', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.MissingRow')),
            ],
            options={
                'verbose_name': 'Documento Faltante',
                'verbose_name_plural': 'Documentos Faltantes',
            },
        ),
        migrations.AddField(
            model_name='file',
            name='group_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.GroupFile'),
        ),
        migrations.AddField(
            model_name='file',
            name='origin_file',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.File'),
        ),
        migrations.AddField(
            model_name='file',
            name='petition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.Petition'),
        ),
        migrations.AddField(
            model_name='file',
            name='petition_month',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='files_rows.PetitionMonth'),
        ),
        migrations.AddField(
            model_name='file',
            name='status_process',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='files_categories.StatusProcessing'),
        ),
        migrations.AddField(
            model_name='column',
            name='group_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='files_rows.GroupFile'),
        ),
        migrations.AddField(
            model_name='column',
            name='parameter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parameter.Parameter'),
        ),
        migrations.AddField(
            model_name='column',
            name='parent_row',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='files_rows.Column', verbose_name='Columna padre de la que derivó'),
        ),
        migrations.AddField(
            model_name='column',
            name='tranformations',
            field=models.ManyToManyField(blank=True, to='parameter.Transformation', verbose_name='Tranformaciones'),
        ),
        migrations.AddField(
            model_name='column',
            name='type_data',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parameter.TypeData'),
        ),
    ]
