# Generated by Django 4.1.13 on 2024-07-16 08:10

from django.db import migrations


def update_model_name(apps, schema_editor):
    TaskFunction = apps.get_model("classify_task", "TaskFunction")
    # from classify_task.models import TaskFunction
    for task_function in TaskFunction.objects.all():
        if task_function.model_name == "entity_week":
            task_function.model_name = "week_record"
            task_function.save()
        elif task_function.model_name == "entity_month":
            task_function.model_name = "month_record"
            task_function.save()
        if task_function.group_queue == "entity_week":
            task_function.group_queue = "week_record"
            task_function.save()
        elif task_function.group_queue == "entity_month":
            task_function.group_queue = "month_record"
            task_function.save()


def update_stage_group_queue(apps, schema_editor):
    Stage = apps.get_model("classify_task", "Stage")
    # from classify_task.models import Stage
    for stage in Stage.objects.all():
        if "entity" in stage.stage_group:
            new_name = stage.stage_group.replace("entity", "provider")
            stage.stage_group = new_name
            stage.save()


def add_function_after(apps, schema_editor):
    Stage = apps.get_model('classify_task', 'Stage')
    # RICK TASK: Verificar este tema
    new_functions = [
        ('explore', 'build_sample_data_after'),
        ('cluster', 'find_coincidences_from_aws'),
    ]
    # explore_stage = Stage.objects.get(name='explore')
    # explore_stage.function_after = 'explore_after'
    # explore_stage.save()
    for stage_name, function_name in new_functions:
        try:
            stage = Stage.objects.get(name=stage_name)
        except Stage.DoesNotExist:
            continue
        stage.function_after = function_name
        stage.save()


class Migration(migrations.Migration):

    dependencies = [
        ('classify_task', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(update_model_name),
        migrations.RunPython(add_function_after),
    ]
