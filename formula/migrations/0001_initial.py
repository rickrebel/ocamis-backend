# Generated by Django 4.1.13 on 2024-07-16 07:59

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('med_cat', '0001_initial'),
        ('medicine', '0001_initial'),
        ('respond', '0001_initial'),
        ('geo', '0001_initial'),
        ('data_param', '0001_initial'),
        ('inai', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sheet_file_id', models.IntegerField()),
                ('row_seq', models.PositiveIntegerField(blank=True, null=True)),
                ('lap_sheet_id', models.IntegerField()),
                ('prescribed_amount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('delivered_amount', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('week_record_id', models.IntegerField(blank=True, null=True)),
                ('delivered', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='med_cat.delivered')),
                ('medicament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='med_cat.medicament')),
            ],
            options={
                'verbose_name': 'Insumos',
                'verbose_name_plural': 'Insumos (medicamentos)',
            },
        ),
        migrations.CreateModel(
            name='MedicalSpeciality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Especialidad de Médico',
                'verbose_name_plural': 'Especialidades de Médicos',
            },
        ),
        migrations.CreateModel(
            name='Rx',
            fields=[
                ('uuid_folio', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('folio_ocamis', models.CharField(max_length=70)),
                ('folio_document', models.CharField(max_length=46)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('month', models.PositiveSmallIntegerField()),
                ('iso_year', models.PositiveSmallIntegerField()),
                ('iso_week', models.PositiveSmallIntegerField()),
                ('iso_day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('iso_delegation', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('document_type', models.CharField(blank=True, max_length=50, null=True)),
                ('date_release', models.DateTimeField(blank=True, null=True)),
                ('date_visit', models.DateTimeField(blank=True, null=True)),
                ('date_delivery', models.DateTimeField(blank=True, null=True)),
                ('days_between', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('delivered_final', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='med_cat.delivered')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='med_cat.doctor')),
                ('medical_unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='med_cat.medicalunit')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.provider')),
            ],
            options={
                'verbose_name': 'Receta',
                'verbose_name_plural': 'Recetas',
            },
        ),
        migrations.CreateModel(
            name='MissingRow',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_data', models.JSONField(blank=True, null=True)),
                ('inserted', models.BooleanField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('drug', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='formula.drug')),
                ('sheet_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missing_rows', to='respond.sheetfile')),
            ],
            options={
                'verbose_name': 'Renglón faltante',
                'verbose_name_plural': 'Renglones faltantes',
            },
        ),
        migrations.CreateModel(
            name='MissingField',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_value', models.TextField(blank=True, null=True)),
                ('final_value', models.TextField(blank=True, null=True)),
                ('other_values', models.JSONField(blank=True, null=True)),
                ('last_revised', models.DateTimeField()),
                ('inserted', models.BooleanField(blank=True, null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('missing_row', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='formula.missingrow')),
                ('name_column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_param.namecolumn')),
            ],
            options={
                'verbose_name': 'Documento Faltante',
                'verbose_name_plural': 'Documentos Faltantes',
            },
        ),
        migrations.CreateModel(
            name='MatDrugTotals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescribed_total', models.IntegerField()),
                ('delivered_total', models.IntegerField()),
                ('total', models.IntegerField()),
                ('clues', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.clues')),
                ('delegation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.delegation')),
                ('delivered', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='med_cat.delivered')),
                ('week_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inai.weekrecord')),
            ],
            options={
                'db_table': 'mat_drug_totals',
            },
        ),
        migrations.CreateModel(
            name='MatDrugPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, max_length=255, null=True)),
                ('prescribed_total', models.IntegerField()),
                ('delivered_total', models.IntegerField()),
                ('total', models.IntegerField()),
                ('clues', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.clues')),
                ('container', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medicine.container')),
                ('delegation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.delegation')),
                ('delivered', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='med_cat.delivered')),
                ('week_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inai.weekrecord')),
            ],
            options={
                'db_table': 'mat_drug_priority',
            },
        ),
        migrations.CreateModel(
            name='MatDrugExtended',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_year', models.PositiveSmallIntegerField()),
                ('iso_week', models.PositiveSmallIntegerField()),
                ('prescribed_total', models.IntegerField()),
                ('delivered_total', models.IntegerField()),
                ('total', models.IntegerField()),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicine.component')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicine.container')),
                ('delegation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.delegation')),
                ('presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicine.presentation')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.provider')),
            ],
            options={
                'db_table': 'mat_drug_extended',
            },
        ),
        migrations.CreateModel(
            name='MatDrugEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso_year', models.PositiveSmallIntegerField()),
                ('iso_week', models.PositiveSmallIntegerField()),
                ('year', models.PositiveSmallIntegerField()),
                ('month', models.PositiveSmallIntegerField()),
                ('prescribed_total', models.IntegerField()),
                ('delivered_total', models.IntegerField()),
                ('total', models.IntegerField()),
                ('delivered', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='med_cat.delivered')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.provider')),
                ('medicament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='med_cat.medicament')),
            ],
            options={
                'db_table': 'mat_drug_entity',
            },
        ),
        migrations.CreateModel(
            name='MatDrug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255)),
                ('prescribed_total', models.IntegerField()),
                ('delivered_total', models.IntegerField()),
                ('total', models.IntegerField()),
                ('clues', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.clues')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='medicine.container')),
                ('delegation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo.delegation')),
                ('delivered', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='med_cat.delivered')),
                ('week_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inai.weekrecord')),
            ],
            options={
                'db_table': 'mat_drug',
            },
        ),
        migrations.AddField(
            model_name='drug',
            name='rx',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drugs', to='formula.rx'),
        ),
        migrations.CreateModel(
            name='DiagnosisRx',
            fields=[
                ('uuid_diag_rx', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_main', models.BooleanField(default=True)),
                ('diagnosis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='med_cat.diagnosis')),
                ('rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnoses', to='formula.rx')),
            ],
            options={
                'verbose_name': 'Diagnóstico por Receta',
                'verbose_name_plural': 'Diagnósticos por Receta',
            },
        ),
        migrations.CreateModel(
            name='ComplementRx',
            fields=[
                ('uuid_comp_rx', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('record', models.CharField(blank=True, max_length=255, null=True, verbose_name='Expediente')),
                ('personal_number', models.CharField(blank=True, max_length=80, null=True, verbose_name='Número personal')),
                ('gender', models.CharField(blank=True, max_length=30, null=True, verbose_name='Género')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='med_cat.area')),
                ('rx', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complements', to='formula.rx')),
            ],
            options={
                'verbose_name': 'Complemento de Receta',
                'verbose_name_plural': 'Complementos de Receta',
            },
        ),
        migrations.CreateModel(
            name='ComplementDrug',
            fields=[
                ('uuid_comp_drug', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lote', models.CharField(blank=True, max_length=80, null=True, verbose_name='Lote')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Fecha de caducidad')),
                ('price', models.FloatField(blank=True, null=True)),
                ('total_price', models.FloatField(blank=True, null=True)),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complements', to='formula.drug')),
            ],
            options={
                'verbose_name': 'Insumos',
                'verbose_name_plural': 'Insumos (medicamentos)',
            },
        ),
    ]
