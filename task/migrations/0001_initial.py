# Generated by Django 4.1.13 on 2024-07-16 07:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('respond', '0001_initial'),
        ('geo', '0001_initial'),
        ('data_param', '0001_initial'),
        ('inai', '0001_initial'),
        ('category', '0001_initial'),
        ('classify_task', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CutOff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_month_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inai.monthrecord', verbose_name='Mes de corte')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cut_offs', to='geo.provider', verbose_name='Entidad')),
            ],
            options={
                'verbose_name': 'Corte de pasos',
                'verbose_name_plural': 'Cortes de pasos',
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_update', models.DateTimeField(blank=True, null=True, verbose_name='Última modificación')),
                ('cut_off', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='task.cutoff', verbose_name='Corte')),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classify_task.stage', verbose_name='Etapa')),
                ('status_operative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.statuscontrol', verbose_name='Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Último usuario en modificar')),
            ],
            options={
                'verbose_name': 'Paso',
                'verbose_name_plural': 'Pasos',
                'ordering': ['-stage__order'],
            },
        ),
        migrations.CreateModel(
            name='OfflineTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField(verbose_name='Inicio')),
                ('date_end', models.DateTimeField(verbose_name='Fin')),
                ('activity_type', models.CharField(choices=[('weekly_meeting', 'Reunión semanal'), ('meeting', 'Reunión'), ('training', 'Capacitación'), ('pnt', 'Solicitudes INAI'), ('other', 'Otro')], max_length=100, verbose_name='Tipo')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Actividad')),
                ('user_added', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='offline_tasks_added', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='offline_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tarea offline',
                'verbose_name_plural': 'Tareas offline',
                'ordering': ['-date_start'],
            },
        ),
        migrations.CreateModel(
            name='FilePath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path_to_file', models.CharField(max_length=400, verbose_name='Ruta al archivo deseable')),
                ('path_in_bucket', models.CharField(max_length=400, verbose_name='Ruta al archivo actual')),
                ('size', models.IntegerField(blank=True, null=True)),
                ('is_correct_path', models.BooleanField(blank=True, null=True)),
                ('data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='respond.datafile')),
                ('reply_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='file_paths', to='respond.replyfile')),
                ('sheet_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='respond.sheetfile')),
                ('table_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='respond.tablefile')),
            ],
            options={
                'verbose_name': 'Ruta de archivo',
                'verbose_name_plural': 'Rutas de archivo',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ClickHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Fecha')),
                ('file_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data_param.filecontrol', verbose_name='Control de archivos')),
                ('month_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inai.monthrecord', verbose_name='Mes')),
                ('petition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inai.petition', verbose_name='Petición')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Historial',
                'verbose_name_plural': 'Historial',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AsyncTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_massive', models.BooleanField(default=False, verbose_name='many')),
                ('subgroup', models.CharField(blank=True, max_length=100, null=True, verbose_name='Subtipo de la función')),
                ('function_after', models.CharField(blank=True, max_length=100, null=True, verbose_name='Función a ejecutar después')),
                ('finished_function', models.CharField(blank=True, max_length=100, null=True, verbose_name='Función a ejecutar si es exitosa')),
                ('original_request', models.JSONField(blank=True, null=True, verbose_name='Request original')),
                ('params_after', models.JSONField(blank=True, null=True, verbose_name='Parámetros de la función after')),
                ('result', models.JSONField(blank=True, null=True)),
                ('errors', models.JSONField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=True, verbose_name='last')),
                ('traceback', models.TextField(blank=True, null=True)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('date_sent', models.DateTimeField(blank=True, null=True)),
                ('date_arrive', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('data_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='respond.datafile')),
                ('file_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='data_param.filecontrol')),
                ('month_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='inai.monthrecord')),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_tasks', to='task.asynctask')),
                ('petition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='inai.petition')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='geo.provider')),
                ('reply_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='respond.replyfile')),
                ('sheet_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='respond.sheetfile')),
                ('status_task', models.ForeignKey(default='created', on_delete=django.db.models.deletion.CASCADE, to='classify_task.statustask', verbose_name='Estado de la tarea')),
                ('task_function', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='functions', to='classify_task.taskfunction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to=settings.AUTH_USER_MODEL)),
                ('week_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='async_tasks', to='inai.weekrecord')),
            ],
            options={
                'verbose_name': 'Tarea solicitada',
                'verbose_name_plural': '1. Tareas solicitadas',
                'ordering': ['-date_start'],
            },
        ),
    ]
