# Generated by Django 4.1.6 on 2023-04-23 05:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('medicine', '0001_initial'),
        ('geo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CovidReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('other_location', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Edad')),
                ('gender', models.CharField(blank=True, max_length=40, null=True, verbose_name='Género')),
                ('special_group', models.CharField(blank=True, max_length=80, null=True, verbose_name='Grupo especial')),
                ('comorbilities', models.JSONField(blank=True, null=True, verbose_name='Comorbilidades')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.municipality', verbose_name='Municipio residencia')),
            ],
            options={
                'verbose_name': 'Reporte COVID',
                'verbose_name_plural': '3. Reportes COVID',
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('informer_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre')),
                ('email', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Correo de contacto')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número de contacto')),
                ('want_litigation', models.BooleanField(blank=True, null=True, verbose_name='¿Permite contacto para asesoría legal?')),
                ('want_management', models.BooleanField(blank=True, null=True, verbose_name='¿Permite contacto para acompañar proceso?')),
            ],
            options={
                'verbose_name': 'Persona Reportante',
                'verbose_name_plural': '4. Personas Reportantes',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('institution_raw', models.CharField(blank=True, max_length=255, null=True, verbose_name='Institución escrita')),
                ('is_other', models.BooleanField(default=False, verbose_name='Es otra institución')),
                ('hospital_name_raw', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre de hospital o clínica')),
                ('disease_raw', models.TextField(blank=True, null=True, verbose_name='Padecimiento')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Edad')),
                ('gender', models.CharField(blank=True, max_length=40, null=True, verbose_name='Género')),
                ('informer_type', models.CharField(choices=[('paciente', 'Paciente'), ('profesional', 'Profesional')], max_length=20, verbose_name='Tipo de Informante')),
                ('informer_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre')),
                ('email', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.EmailValidator()], verbose_name='Correo de contacto')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Número de contacto')),
                ('want_litigation', models.BooleanField(blank=True, null=True, verbose_name='¿Permite contacto para litigio?')),
                ('origin_app', models.CharField(default='CD2', max_length=100, verbose_name='Aplicacion')),
                ('validated', models.BooleanField(blank=True, default=None, null=True)),
                ('session_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('validator', models.IntegerField(blank=True, null=True)),
                ('validated_date', models.DateTimeField(blank=True, null=True)),
                ('pending', models.BooleanField(default=False)),
                ('testimony', models.TextField(blank=True, null=True)),
                ('public_testimony', models.BooleanField(blank=True, null=True)),
                ('has_corruption', models.BooleanField(blank=True, null=True, verbose_name='¿Incluyó corrupción?')),
                ('narration', models.TextField(blank=True, null=True, verbose_name='Relato de la corrupción')),
                ('sent_email', models.BooleanField(blank=True, null=True)),
                ('sent_responsible', models.BooleanField(blank=True, null=True)),
                ('medicine_type', models.CharField(blank=True, max_length=30, null=True, verbose_name='Tipo de medicina')),
                ('medication_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre de medicamento / Insumo faltante')),
                ('clues', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.clues')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.institution', verbose_name='Institución')),
                ('persona', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.persona', verbose_name='Persona reportante')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.state', verbose_name='Entidad')),
            ],
            options={
                'verbose_name': 'Reporte',
                'verbose_name_plural': '1. Reportes',
                'db_table': 'desabasto_report',
            },
        ),
        migrations.CreateModel(
            name='TestimonyMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_file', models.FileField(blank=True, null=True, upload_to='cero_desabasto')),
                ('url', models.URLField(blank=True, null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='testimonies_media', to='report.report')),
            ],
            options={
                'verbose_name': 'Archivo de testimonio',
                'verbose_name_plural': '8. Archivos de testimonio',
                'db_table': 'desabasto_testimonymedia',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='Tipo de Medicamento')),
                ('medicine_name_raw', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre reportado del medicamento')),
                ('presentation_raw', models.CharField(blank=True, max_length=255, null=True)),
                ('medicine_real_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre real del medicamento')),
                ('component', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medicine.component')),
                ('disease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.disease', verbose_name='Padecimiento')),
                ('presentation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='medicine.presentation')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplies', to='report.report')),
            ],
            options={
                'verbose_name': 'Medicamento o insumo',
                'verbose_name_plural': '2. Medicamentos/Insumos de reportes',
                'db_table': 'desabasto_supply',
            },
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nombre')),
                ('emails', models.CharField(help_text='Pueden agregarse varios, separar por comas', max_length=255, verbose_name='Correos electronicos')),
                ('position', models.CharField(max_length=255, verbose_name='Cargo o posición')),
                ('update_date', models.DateField(blank=True, null=True, verbose_name='Fecha de actualización')),
                ('petition_date', models.DateField(blank=True, null=True, verbose_name='Fecha respuesta oficio')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('is_covid', models.BooleanField(default=False, verbose_name='Responsable COVID')),
                ('clues', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsables', to='geo.clues', verbose_name='Clínica u Hospital')),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsables', to='geo.institution', verbose_name='Institución')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='responsables', to='geo.state', verbose_name='Entidad')),
            ],
            options={
                'verbose_name': 'Responsable',
                'verbose_name_plural': '6. Responsables',
                'db_table': 'desabasto_responsable',
            },
        ),
        migrations.CreateModel(
            name='DosisCovid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_success', models.BooleanField(default=False, verbose_name='Es dosis aplicada')),
                ('other_location', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('round_dosis', models.CharField(blank=True, max_length=60, null=True, verbose_name='Número de dosis')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('reason_negative', models.TextField(blank=True, null=True, verbose_name='Razón de negativa')),
                ('covid_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dosis', to='report.covidreport', verbose_name='Reporte Covid')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.municipality', verbose_name='Municipio')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.state', verbose_name='Entidad')),
            ],
            options={
                'verbose_name': 'Dosis',
                'verbose_name_plural': '5. Dosis aplicadas y negadas',
            },
        ),
        migrations.AddField(
            model_name='covidreport',
            name='persona',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='report.persona', verbose_name='Persona reportante'),
        ),
        migrations.AddField(
            model_name='covidreport',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geo.state', verbose_name='Entidad'),
        ),
        migrations.CreateModel(
            name='ComplementReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default='', max_length=30)),
                ('testimony', models.TextField(blank=True, null=True)),
                ('public_testimony', models.BooleanField(blank=True, null=True)),
                ('has_corruption', models.BooleanField(blank=True, null=True, verbose_name='¿Incluyó corrupción?')),
                ('narration', models.TextField(blank=True, null=True, verbose_name='Relato de la corrupción')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas (para corrección)')),
                ('validated', models.BooleanField(blank=True, default=None, null=True)),
                ('validator', models.IntegerField(blank=True, null=True)),
                ('validated_date', models.DateTimeField(blank=True, null=True)),
                ('pending', models.BooleanField(default=False)),
                ('session_ga', models.CharField(blank=True, max_length=255, null=True)),
                ('origin_app', models.CharField(default='CD2', max_length=100, verbose_name='Aplicación')),
                ('covid_report', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complement', to='report.covidreport')),
                ('report', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='complement', to='report.report')),
            ],
            options={
                'verbose_name': 'Complemento de un reporte',
                'verbose_name_plural': 'Complementos de reportes',
            },
        ),
    ]
