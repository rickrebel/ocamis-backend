# Generated by Django 2.2.25 on 2022-07-26 19:23

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import inai.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('data_param', '0001_initial'),
        ('category', '0001_initial'),
        ('catalog', '0008_auto_20220719_1927'),
    ]

    operations = [
        migrations.CreateModel(
            name='FileControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='grupo único', max_length=120)),
                ('format_file', models.CharField(blank=True, choices=[('pdf', 'PDF'), ('word', 'Word'), ('xls', 'Excel'), ('txt', 'Texto'), ('csv', 'CSV'), ('email', 'Correo electrónico'), ('other', 'Otro')], max_length=5, null=True)),
                ('other_format', models.CharField(blank=True, max_length=80, null=True)),
                ('final_data', models.BooleanField(verbose_name='Es información final')),
                ('notes', models.TextField(blank=True, null=True)),
                ('row_start_data', models.IntegerField(default=1, verbose_name='# de fila donde inician los datos')),
                ('row_headers', models.IntegerField(blank=True, null=True, verbose_name='# de fila donde se encuentran los encabezados')),
                ('in_percent', models.BooleanField(default=False)),
                ('addl_params', django.contrib.postgres.fields.jsonb.JSONField(default=inai.models.FileControl.default_addl_params)),
                ('delimiter', models.CharField(blank=True, max_length=3, null=True, verbose_name='Delimitador de columnas')),
                ('file_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.FileType')),
                ('status_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.StatusControl', verbose_name='Status de los registro de variables')),
            ],
            options={
                'verbose_name': 'Grupo de archivos',
                'verbose_name_plural': 'Grupos de archivos',
            },
        ),
        migrations.CreateModel(
            name='MonthEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_month', models.CharField(max_length=10)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='months', to='catalog.Entity')),
            ],
            options={
                'verbose_name': 'Mes de entidad',
                'verbose_name_plural': 'Meses de entidad',
            },
        ),
        migrations.CreateModel(
            name='NameColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_in_data', models.TextField(blank=True, null=True)),
                ('position_in_data', models.IntegerField(default=1)),
                ('clean_params', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('requiered_row', models.BooleanField(default=False)),
                ('children_row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childrens', to='inai.NameColumn', verbose_name='Hijo resultado (junto a otras columnas)')),
                ('column_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.ColumnType')),
                ('data_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data_param.DataType')),
                ('file_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='inai.FileControl')),
                ('final_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='data_param.FinalField')),
                ('parent_row', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='inai.NameColumn', verbose_name='Columna padre de la que derivó')),
            ],
            options={
                'verbose_name': 'Nombre de Columna',
                'verbose_name_plural': 'Nombres de Columnas',
            },
        ),
        migrations.CreateModel(
            name='Petition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_send', models.DateTimeField(blank=True, null=True)),
                ('limit_response', models.DateTimeField(blank=True, null=True)),
                ('date_response', models.DateTimeField(blank=True, null=True)),
                ('limit_pickup', models.DateTimeField(blank=True, null=True, verbose_name='límite para recoger datos')),
                ('limit_complain', models.DateTimeField(blank=True, null=True, verbose_name='límite para presentar queja')),
                ('ask_extension', models.NullBooleanField(verbose_name='Se solicitó extensión')),
                ('notes', models.TextField(blank=True, null=True)),
                ('folio_petition', models.IntegerField(blank=True, null=True, verbose_name='Folio de la solicitud')),
                ('folio_queja', models.IntegerField(blank=True, null=True, verbose_name='Folio de la queja')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='petitions', to='catalog.Entity')),
                ('status_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='petitions_data', to='category.StatusControl', verbose_name='Status de los datos entregados')),
                ('status_petition', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='petitions_petition', to='category.StatusControl', verbose_name='Status de la petición')),
            ],
            options={
                'verbose_name': 'Solicitud',
                'verbose_name_plural': 'Solicitudes',
            },
        ),
        migrations.CreateModel(
            name='Transformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addl_params', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('clean_function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_param.CleanFunction', verbose_name='Función de limpieza o tranformación')),
                ('file_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='file_tranformations', to='inai.FileControl', verbose_name='Grupo de archivos')),
                ('name_column', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='column_tranformations', to='inai.NameColumn', verbose_name='Columna')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ori_file', models.FileField(upload_to='')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True, verbose_name='Texto (en caso de no haber archivo)')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('addl_params', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Otras configuraciones')),
                ('file_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.FileType')),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_files', to='inai.Petition')),
            ],
            options={
                'verbose_name': 'Documento',
                'verbose_name_plural': 'Documentos',
            },
        ),
        migrations.CreateModel(
            name='PetitionNegativeReason',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_main', models.BooleanField(verbose_name='Es la razón principal')),
                ('negative_reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.NegativeReason')),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inai.Petition')),
            ],
            options={
                'verbose_name': 'Petición - razón negativa (m2m)',
                'verbose_name_plural': 'Peticiones - razones negativas (m2m)',
            },
        ),
        migrations.CreateModel(
            name='PetitionMonth',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('month_entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inai.MonthEntity')),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='petition_months', to='inai.Petition')),
            ],
            options={
                'verbose_name': 'Mes de peticion',
                'verbose_name_plural': 'Meses de peticion',
            },
        ),
        migrations.CreateModel(
            name='PetitionFileControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_control', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inai.FileControl')),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='file_controls', to='inai.Petition')),
            ],
            options={
                'verbose_name': 'Relacional: petición -- file_control',
                'verbose_name_plural': 'Relacional: petición -- file_control',
            },
        ),
        migrations.CreateModel(
            name='DataFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ori_file', models.FileField(upload_to='')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('error_process', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('inserted_rows', models.IntegerField(default=1)),
                ('completed_rows', models.IntegerField(default=1)),
                ('total_rows', models.IntegerField(default=1)),
                ('month_entity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='inai.MonthEntity')),
                ('origin_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_files', to='inai.DataFile')),
                ('petition_file_control', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data_files', to='inai.PetitionFileControl')),
                ('status_process', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.StatusControl')),
            ],
            options={
                'verbose_name': 'Archivo con datos',
                'verbose_name_plural': 'Archivos con datos',
            },
        ),
    ]
